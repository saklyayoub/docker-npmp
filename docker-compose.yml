#
# NPMP  Nginx Php Mysql Phpmyadmin
#
# ███████████████████████████████████████████████████████████████
# █─▄▄▄▄██▀▄─██▄─█─▄█▄─▄███▄─█─▄████▀▄─██▄─█─▄█─▄▄─█▄─██─▄█▄─▄─▀█
# █▄▄▄▄─██─▀─███─▄▀███─██▀██▄─▄█████─▀─███▄─▄██─██─██─██─███─▄─▀█
# ▀▄▄▄▄▄▀▄▄▀▄▄▀▄▄▀▄▄▀▄▄▄▄▄▀▀▄▄▄▀▀▀▀▄▄▀▄▄▀▀▄▄▄▀▀▄▄▄▄▀▀▄▄▄▄▀▀▄▄▄▄▀▀
#
#
# https://github.com/saklyayoub
# +216 20 666 996
# saklyayoub@gmail.com
# 2021(R)
#
#
#

version: '3'

networks: 
  backend: 
  frontend: 
    external: true

volumes: 
  mysqldata: {}

services: 
  composer: 
    command: install
    container_name: "${NGINX_HOST}_composer"
    env_file: 
      - .env
    image: composer
    networks: 
      - backend
    volumes: 
      - "./web/app:/app"

  mysql: 
    container_name: "${NGINX_HOST}_mysql"
    env_file: 
      - .env
    environment: 
      - "TZ=${TZ}"
      - "MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}"
      - "MYSQL_USER=${MYSQL_USER}"
      - "MYSQL_PASSWORD=${MYSQL_PASSWORD}"
      - "MYSQL_DATABASE=${MYSQL_DATABASE}"
    image: "mysql:${MYSQL_VERSION}"
    logging: 
      driver: "${LOGIGIN_DRIVER}"
    networks: 
      - backend
    restart: unless-stopped
    volumes: 
      - "mysqldata:/var/lib/mysql"

  php: 
    build: 
      context: ./docker
      dockerfile: "Dockerfile-${DOCKERFILE_VERSION}"
    container_name: "${NGINX_HOST}_php"
    env_file: 
      - .env
    environment: 
      TZ: "${TZ}"
    logging: 
      driver: "${LOGIGIN_DRIVER}"
    networks: 
      - backend
    restart: unless-stopped
    volumes: 
      - "./web:/web"
      - "./etc/php/php.ini:/usr/local/etc/php/conf.d/custom.ini"

  phpmyadmin: 
    container_name: "${NGINX_HOST}_phpmyadmin"
    env_file: 
      - .env
    environment: 
      - "TZ=${TZ}"
      - "PMA_HOST=${MYSQL_HOST}"
      - "MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}"
      - "MAX_EXECUTION_TIME=${PMA_MAX_EXECUTION_TIME}"
      - "UPLOAD_LIMIT=${PMA_UPLOAD_LIMIT}"
      - "MEMORY_LIMIT=${PMA_MEMORY_LIMIT}"
    image: phpmyadmin
    logging: 
      driver: "${LOGIGIN_DRIVER}"
    networks: 
      - frontend
      - backend
    ports: 
      - "8080:80"
    restart: unless-stopped

  web: 
    container_name: "${NGINX_HOST}_web"
    env_file: 
      - .env
    environment: 
      NGINX_HOST: "${NGINX_HOST}"
      TZ: "${TZ}"
    image: "nginx:latest"
    logging: 
      driver: "${LOGIGIN_DRIVER}"
    networks: 
      - frontend
      - backend
    ports: 
      - "80:80"
      - "443:443"
    restart: unless-stopped

    volumes: 
      - "./web:/web"
      - "./etc/ssl:/etc/ssl"
      - "./etc/nginx/nginx.${NGINX_PROTOCOLE}.conf:/etc/nginx/conf.d/default.conf"
      - "./etc/nginx/default.template.conf:/etc/nginx/conf.d/default.template"
      - "./etc/nginx/nginx.conf:/etc/nginx/nginx.conf"
